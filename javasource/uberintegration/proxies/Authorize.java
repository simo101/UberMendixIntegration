// This file was generated by Mendix Business Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package uberintegration.proxies;

/**
 * 
 */
public class Authorize
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject authorizeMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "UberIntegration.Authorize";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		response_type("response_type"),
		client_id("client_id"),
		scope("scope"),
		state("state"),
		redirect_uri("redirect_uri"),
		URL("URL");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Authorize(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "UberIntegration.Authorize"));
	}

	protected Authorize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject authorizeMendixObject)
	{
		if (authorizeMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("UberIntegration.Authorize", authorizeMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a UberIntegration.Authorize");

		this.authorizeMendixObject = authorizeMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Authorize.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static uberintegration.proxies.Authorize initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return uberintegration.proxies.Authorize.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static uberintegration.proxies.Authorize initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new uberintegration.proxies.Authorize(context, mendixObject);
	}

	public static uberintegration.proxies.Authorize load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return uberintegration.proxies.Authorize.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of response_type
	 */
	public final String getresponse_type()
	{
		return getresponse_type(getContext());
	}

	/**
	 * @param context
	 * @return value of response_type
	 */
	public final String getresponse_type(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.response_type.toString());
	}

	/**
	 * Set value of response_type
	 * @param response_type
	 */
	public final void setresponse_type(String response_type)
	{
		setresponse_type(getContext(), response_type);
	}

	/**
	 * Set value of response_type
	 * @param context
	 * @param response_type
	 */
	public final void setresponse_type(com.mendix.systemwideinterfaces.core.IContext context, String response_type)
	{
		getMendixObject().setValue(context, MemberNames.response_type.toString(), response_type);
	}

	/**
	 * @return value of client_id
	 */
	public final String getclient_id()
	{
		return getclient_id(getContext());
	}

	/**
	 * @param context
	 * @return value of client_id
	 */
	public final String getclient_id(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.client_id.toString());
	}

	/**
	 * Set value of client_id
	 * @param client_id
	 */
	public final void setclient_id(String client_id)
	{
		setclient_id(getContext(), client_id);
	}

	/**
	 * Set value of client_id
	 * @param context
	 * @param client_id
	 */
	public final void setclient_id(com.mendix.systemwideinterfaces.core.IContext context, String client_id)
	{
		getMendixObject().setValue(context, MemberNames.client_id.toString(), client_id);
	}

	/**
	 * @return value of scope
	 */
	public final String getscope()
	{
		return getscope(getContext());
	}

	/**
	 * @param context
	 * @return value of scope
	 */
	public final String getscope(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.scope.toString());
	}

	/**
	 * Set value of scope
	 * @param scope
	 */
	public final void setscope(String scope)
	{
		setscope(getContext(), scope);
	}

	/**
	 * Set value of scope
	 * @param context
	 * @param scope
	 */
	public final void setscope(com.mendix.systemwideinterfaces.core.IContext context, String scope)
	{
		getMendixObject().setValue(context, MemberNames.scope.toString(), scope);
	}

	/**
	 * @return value of state
	 */
	public final String getstate()
	{
		return getstate(getContext());
	}

	/**
	 * @param context
	 * @return value of state
	 */
	public final String getstate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.state.toString());
	}

	/**
	 * Set value of state
	 * @param state
	 */
	public final void setstate(String state)
	{
		setstate(getContext(), state);
	}

	/**
	 * Set value of state
	 * @param context
	 * @param state
	 */
	public final void setstate(com.mendix.systemwideinterfaces.core.IContext context, String state)
	{
		getMendixObject().setValue(context, MemberNames.state.toString(), state);
	}

	/**
	 * @return value of redirect_uri
	 */
	public final String getredirect_uri()
	{
		return getredirect_uri(getContext());
	}

	/**
	 * @param context
	 * @return value of redirect_uri
	 */
	public final String getredirect_uri(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.redirect_uri.toString());
	}

	/**
	 * Set value of redirect_uri
	 * @param redirect_uri
	 */
	public final void setredirect_uri(String redirect_uri)
	{
		setredirect_uri(getContext(), redirect_uri);
	}

	/**
	 * Set value of redirect_uri
	 * @param context
	 * @param redirect_uri
	 */
	public final void setredirect_uri(com.mendix.systemwideinterfaces.core.IContext context, String redirect_uri)
	{
		getMendixObject().setValue(context, MemberNames.redirect_uri.toString(), redirect_uri);
	}

	/**
	 * @return value of URL
	 */
	public final String getURL()
	{
		return getURL(getContext());
	}

	/**
	 * @param context
	 * @return value of URL
	 */
	public final String getURL(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.URL.toString());
	}

	/**
	 * Set value of URL
	 * @param url
	 */
	public final void setURL(String url)
	{
		setURL(getContext(), url);
	}

	/**
	 * Set value of URL
	 * @param context
	 * @param url
	 */
	public final void setURL(com.mendix.systemwideinterfaces.core.IContext context, String url)
	{
		getMendixObject().setValue(context, MemberNames.URL.toString(), url);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return authorizeMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final uberintegration.proxies.Authorize that = (uberintegration.proxies.Authorize) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "UberIntegration.Authorize";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
