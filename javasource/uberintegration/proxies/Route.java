// This file was generated by Mendix Business Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package uberintegration.proxies;

/**
 * 
 */
public class Route
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject routeMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "UberIntegration.Route";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		ProductID("ProductID"),
		To("UberIntegration.To"),
		From("UberIntegration.From"),
		Route_RequestResponse("UberIntegration.Route_RequestResponse");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Route(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "UberIntegration.Route"));
	}

	protected Route(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject routeMendixObject)
	{
		if (routeMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("UberIntegration.Route", routeMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a UberIntegration.Route");

		this.routeMendixObject = routeMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Route.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static uberintegration.proxies.Route initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return uberintegration.proxies.Route.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static uberintegration.proxies.Route initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new uberintegration.proxies.Route(context, mendixObject);
	}

	public static uberintegration.proxies.Route load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return uberintegration.proxies.Route.initialize(context, mendixObject);
	}

	public static java.util.List<uberintegration.proxies.Route> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<uberintegration.proxies.Route> result = new java.util.ArrayList<uberintegration.proxies.Route>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//UberIntegration.Route" + xpathConstraint))
			result.add(uberintegration.proxies.Route.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of ProductID
	 */
	public final String getProductID()
	{
		return getProductID(getContext());
	}

	/**
	 * @param context
	 * @return value of ProductID
	 */
	public final String getProductID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (String) getMendixObject().getValue(context, MemberNames.ProductID.toString());
	}

	/**
	 * Set value of ProductID
	 * @param productid
	 */
	public final void setProductID(String productid)
	{
		setProductID(getContext(), productid);
	}

	/**
	 * Set value of ProductID
	 * @param context
	 * @param productid
	 */
	public final void setProductID(com.mendix.systemwideinterfaces.core.IContext context, String productid)
	{
		getMendixObject().setValue(context, MemberNames.ProductID.toString(), productid);
	}

	/**
	 * @return value of To
	 */
	public final uberintegration.proxies.ToAndFrom getTo() throws com.mendix.core.CoreException
	{
		return getTo(getContext());
	}

	/**
	 * @param context
	 * @return value of To
	 */
	public final uberintegration.proxies.ToAndFrom getTo(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		uberintegration.proxies.ToAndFrom result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.To.toString());
		if (identifier != null)
			result = uberintegration.proxies.ToAndFrom.load(context, identifier);
		return result;
	}

	/**
	 * Set value of To
	 * @param to
	 */
	public final void setTo(uberintegration.proxies.ToAndFrom to)
	{
		setTo(getContext(), to);
	}

	/**
	 * Set value of To
	 * @param context
	 * @param to
	 */
	public final void setTo(com.mendix.systemwideinterfaces.core.IContext context, uberintegration.proxies.ToAndFrom to)
	{
		if (to == null)
			getMendixObject().setValue(context, MemberNames.To.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.To.toString(), to.getMendixObject().getId());
	}

	/**
	 * @return value of From
	 */
	public final uberintegration.proxies.ToAndFrom getFrom() throws com.mendix.core.CoreException
	{
		return getFrom(getContext());
	}

	/**
	 * @param context
	 * @return value of From
	 */
	public final uberintegration.proxies.ToAndFrom getFrom(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		uberintegration.proxies.ToAndFrom result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.From.toString());
		if (identifier != null)
			result = uberintegration.proxies.ToAndFrom.load(context, identifier);
		return result;
	}

	/**
	 * Set value of From
	 * @param from
	 */
	public final void setFrom(uberintegration.proxies.ToAndFrom from)
	{
		setFrom(getContext(), from);
	}

	/**
	 * Set value of From
	 * @param context
	 * @param from
	 */
	public final void setFrom(com.mendix.systemwideinterfaces.core.IContext context, uberintegration.proxies.ToAndFrom from)
	{
		if (from == null)
			getMendixObject().setValue(context, MemberNames.From.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.From.toString(), from.getMendixObject().getId());
	}

	/**
	 * @return value of Route_RequestResponse
	 */
	public final uberintegration.proxies.RequestResponse getRoute_RequestResponse() throws com.mendix.core.CoreException
	{
		return getRoute_RequestResponse(getContext());
	}

	/**
	 * @param context
	 * @return value of Route_RequestResponse
	 */
	public final uberintegration.proxies.RequestResponse getRoute_RequestResponse(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		uberintegration.proxies.RequestResponse result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Route_RequestResponse.toString());
		if (identifier != null)
			result = uberintegration.proxies.RequestResponse.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Route_RequestResponse
	 * @param route_requestresponse
	 */
	public final void setRoute_RequestResponse(uberintegration.proxies.RequestResponse route_requestresponse)
	{
		setRoute_RequestResponse(getContext(), route_requestresponse);
	}

	/**
	 * Set value of Route_RequestResponse
	 * @param context
	 * @param route_requestresponse
	 */
	public final void setRoute_RequestResponse(com.mendix.systemwideinterfaces.core.IContext context, uberintegration.proxies.RequestResponse route_requestresponse)
	{
		if (route_requestresponse == null)
			getMendixObject().setValue(context, MemberNames.Route_RequestResponse.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Route_RequestResponse.toString(), route_requestresponse.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return routeMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final uberintegration.proxies.Route that = (uberintegration.proxies.Route) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "UberIntegration.Route";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
